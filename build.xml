<?xml version="1.0" encoding="UTF-8"?>
<project name="Flagbit_Factfinder" default="deploy-dev.local" basedir=".">
    
    <property file="build.properties"/>
    <property file="build.default.properties"/>
    <property name="targetdir" value="${dev.local.deployDir}"/>
    <property name="srcdir" value="${basedir}/src"/>
    <property name="builddir" value="${basedir}/build"/>   
	<property name="vagrantdir" value="${basedir}/.vagrant"/>
 
	<target name="01 vagrant init">
		  <exec dir="${vagrantdir}" executable="cmd">
			  <arg line="/c vagrant init ${vagrant.basebox}"/>
		  </exec>
 
		  <exec dir="${vagrantdir}" executable="cmd">
			  <arg line="/c vagrant up"/>
		  </exec>
 
	</target>

	<target name="02 vagrant up">
		  <exec dir="${vagrantdir}" executable="cmd">
			  <arg line="/c vagrant up"/>
		  </exec>
	</target>
 
	<target name="03 vagrant reload">
		  <exec dir="${vagrantdir}" executable="cmd">
			  <arg line="/c vagrant reload"/>
		  </exec>
	</target>
 	
	<target name="04 vagrant suspend">
		  <exec dir="${vagrantdir}" executable="cmd">
			  <arg line="/c vagrant halt"/>
		  </exec>
	</target>
	
	<target name="05 vagrant resume">
		  <exec dir="${vagrantdir}" executable="cmd">
			  <arg line="/c vagrant halt"/>
		  </exec>
	</target>

	<target name="06 vagrant halt">
		  <exec dir="${vagrantdir}" executable="cmd">
			  <arg line="/c vagrant halt"/>
		  </exec>
	</target>
	
	<target name="08 vagrant configure mageinstall">	

		  <sshexec host="${vagrant.ip}"
			username="${vagrant.user}"
			port="${vagrant.port}"
			password="${vagrant.pass}"
			trust="true"
			verbose="true"
			command="wget http://web13.site.flagbit.com/mageinstall/vagrant-magento.tgz -P /usr/local/src/magento; cd /usr/local/src/magento; tar xfz vagrant-magento.tgz"/>
			
    </target> 
	
    <target name="prepare">
        <replaceregexp file="${basedir}/package.xml"
            match="(&lt;version&gt;.*?&lt;(release)&gt;).*?(&lt;/\2&gt;.*?&lt;(api)&gt;).*?(&lt;/\4&gt;.*?&lt;/version&gt;)"
            replace="\1${package.version}\3${package.version}\5" flags="gs" />
        <replaceregexp file="${srcdir}/app/code/community/Flagbit/FactFinder/etc/config.xml"
            match="(&lt;version&gt;).*?(&lt;/version&gt;)"
            replace="\1${package.version}\2" flags="gs" />
        <replaceregexp file="${basedir}/composer.json"
            match="(&quot;version&quot;\s*:\s*&quot;)[\d\.]+(&quot;)"
            replace="\1${package.version}\2" flags="gs" />
    </target>
 
     <target name="phpcs" description="PHP_CodeSniffer">
	   	<exec dir='${srcdir}/' executable="${phpcs}">
   <arg line="-s
              --extensions=php
              --standard=zend ${srcdir}"/>			
	   	</exec>
    </target>
 
    <target name="package" depends="prepare" description="Creates a PEAR package">
        <copy file="${basedir}/package.xml" tofile="${srcdir}/package.xml"/>
	   	<exec dir='${srcdir}/' executable="${pear}">
	   	    <arg value="mpx"/>
	   	</exec>
    	<copy file="${srcdir}/package.xml" tofile="${basedir}/package.xml"/>
        <exec dir="${srcdir}" executable="${pear}">
            <arg value="mage-package"/>
        </exec>
        <delete file="${srcdir}/package.xml"/>
        <move file="${srcdir}/${ant.project.name}-${package.version}.tgz" todir="${builddir}"/>
    </target>
 
    <target name="deploy-dev.local">
        <copy todir="${targetdir}" overwrite="yes" verbose="true">
            <fileset dir="${srcdir}">
                <include name="**/*"/>
  
                <exclude name="**/.svn"/>
                <exclude name=".buildpath/**"/>
                <exclude name=".project"/>
                <exclude name=".settings/**"/>
                <exclude name="cache.properties"/>
                <exclude name="build.default.properties"/>
                <exclude name="build.properties"/>
                <exclude name="build.xml"/>
                <exclude name="TODO"/>
            </fileset>
        </copy>
    </target>
	
	<target name="deploy_to_dev.mshop.brack.ch">
	  <antcall target="deploy_scp">
	    <param name="ssh.user" value="${mshop.ssh.user}"/>
	  	<param name="ssh.pass" value="${mshop.ssh.pass}"/>
	    <param name="ssh.server" value="${mshop.ssh.server}"/>
	  	<param name="ssh.path" value="${mshop.ssh.path}"/>
	  	<param name="ssh.cache" value="${mshop.ssh.cache}"/>
	  </antcall>
	</target>		
	
	
    <target name="deploy_scp">
        <scp
            todir="${ssh.user}@${ssh.server}:${ssh.path}" 
            password="${ssh.pass}"
        	trust="true"
			port="${ssh.port}"
            >
            <fileset dir="${srcdir}/">
                <include name="**/*"/>
                <modified>
                	 <param name="cache.cachefile" value="${ssh.cache}.cache.properties"/>
                </modified>
                <exclude name="**/.svn"/>
                <exclude name=".buildpath"/>
                <exclude name=".project"/>
                <exclude name=".settings/**"/>
            	<exclude name=".cache/**"/>
            	<exclude name="webserver/**"/>
            	<exclude name=".externalToolBuilders/**"/>
                <exclude name="downloader/**"/>
            	<exclude name="pear"/>
                <exclude name="*cache.properties"/>
                <exclude name="build.default.properties"/>
                <exclude name="build.properties"/>
                <exclude name="build.xml"/>
                <exclude name="TODO"/>
            	<exclude name="var/**" />
            	<exclude name="Thumbs.db" />
            </fileset>
        </scp>
    </target>	

</project>