<?php
/**
 * Flagbit_FactFinder
 *
 * @category  Mage
 * @package   Flagbit_FactFinder
 * @copyright Copyright (c) 2010 Flagbit GmbH & Co. KG (http://www.flagbit.de/)
 */

/**
 * Advanced Template to replace Javascript Suggest
 * NOTICE: This template will only work if suggests are requested from the proxy (see option in section "FACT-Finder Config Data" in Magento's backend)!
 * 
 * @category  Mage
 * @package   Flagbit_FactFinder
 * @copyright Copyright (c) 2010 Flagbit GmbH & Co. KG (http://www.flagbit.de/)
 * @author    Joerg Weller <weller@flagbit.de>
 * @version   $Id$
 */
?>

<style type="text/css"><!--

.header .form-search .search-autocomplete li.delimiter {
	cursor: default;
	padding-left: 4px;
	font-weight: bold;
	font-size: 10px;
	background-color: #4F4F4F;
	color: #F4EEE7;
}

.header .form-search .search-autocomplete li.category {
	background-color: #E4DED7;
}

.header .form-search .search-autocomplete li.category.selected {
	background-color: #E4D6CF;
}

.header .form-search .search-autocomplete img.thumbnail {
	float:left;
	margin-top: 2px;
	margin-bottom: 3px;
	margin-right: 5px;
	width: 31px;
	height: 31px;
}

--></style>

<form id="search_mini_form" action="<?php echo $this->helper('catalogsearch')->getResultUrl() ?>" method="get">
    <div class="form-search">
        <label for="search"><?php echo $this->__('Search:') ?></label>
        <input id="search" type="text" name="<?php echo $this->helper('catalogsearch')->getQueryParamName() ?>" value="<?php echo $this->helper('catalogsearch')->getEscapedQueryText() ?>" class="input-text ff-basic-autocomplete" />
        <button type="submit" title="<?php echo $this->__('Search') ?>" class="button"><span><span><?php echo $this->__('Search') ?></span></span></button>
        <div id="search_autocomplete" class="search-autocomplete"></div>
        <script type="text/javascript">
        //<![CDATA[
			<?php if (Mage::helper('factfinder/search')->getIsEnabled(false, 'suggest')):?>
			
				// loadDataCallback:
				// This callback will be used by the Autocompleter to generate the complete contents of the autocompletion target
				// (in this template #search_autocomplete). The only parameter to the callback is an array of Objects. Each item
				// represents one Suggest result and its properties correspond to the fields returned by FACT-Finder.
				// In addition, if secondary channels are considered for Suggest, each item will also contain a property "channel"
				// which contains the identifier of the channel it is from.
				// The callback should return the whole HTML structure that goes into the autocompletion target as one string.
				// It is then passed to FactFinderSuggest in its constructor.
				//
				// HTML Structure:
				// It is mostly up to you what the callback returns in terms of HTML structure and layout. There are a few caveats
				// though:
				//  - For keyboard control to work, every suggest item (whatever element type it is) has to have
				//    the class "selectable-item".
				//  - You should add an invisible element (style="display: none;") with both the "selected" and the "selectable-item"
				//    classes above all others, so that on displaying the result list, no element is pre-selected.
				//  - Any item with a non-empty title tag will be clickable and the title will be used as the search term. Clicking
				//    on an item with an empty or without a title tag will not trigger the search. However, it might close the result
				//	  list.
				
				var loadDataCallback = function(data) {
					// Internationalization lookup:
					// Add a new anonymous object for every string you want to internationalize (with the property being the string).
					// These objects consist of one string for each locale, where the property is the locale code.
					var i18n = {
						"Products" : {
							"de_DE" : "Produkte",
							"en_US" : "Products",
							"fr_FR" : "Produits"
						},
						"Channel: dev-content" : {
							"de_DE" : "Inhalte",
							"en_US" : "Content Results",
							"fr_FR" : "Teneurs"
						}
					};
					var locale = '<?php echo Mage::app()->getLocale()->getDefaultLocale(); ?>';
				
					var content = '<ul>';
					content += '<li style="display: none" class="selected selectable-item"></li>';
					var currentChannel = '';
					if(data.length) {
						content += '<li class="delimiter">' + i18n['Products'][locale] + '</li>';
						currentChannel = data[0].channel;
					}
						
					for(var i = 0; i < data.length; i++) {
						var item = data[i];
						if(item.channel != currentChannel)
						{
							content += '<li class="delimiter">' + i18n['Channel: ' + item.channel][locale] + '</li>';
							currentChannel = item.channel;
						}
						var temp = '';
						temp += '<li title="' + item.query + '" class="selectable-item ' + item.type + '">';
						temp += '<span class="amount">' + (item.hitCount == 0 ? '' : item.hitCount) + '</span>';
						if(item.imageURL)
						{
							temp += '<img src="' + item.imageURL + '" title="' + item.query + '" class="thumbnail"/>';
						}
						temp += item.query;
						temp += '</li>';
						content += temp;
					}
					content += '</ul>';
					return content;
				};
				
				var searchForm = new FactFinderSuggest('search_mini_form', 'search', '<?php echo $this->__('Search entire store here...') ?>', loadDataCallback);
				searchForm.initAutocomplete('<?php echo $this->helper('factfinder/search')->getSuggestUrl() ?>', 'search_autocomplete');
            <?php else:?>
				var searchForm = new Varien.searchForm('search_mini_form', 'search', '<?php echo $this->__('Search entire store here...') ?>');
				searchForm.initAutocomplete('<?php echo $this->helper('catalogsearch')->getSuggestUrl() ?>', 'search_autocomplete');
            <?php endif;?>
        //]]>
        </script>
    </div>
</form>
